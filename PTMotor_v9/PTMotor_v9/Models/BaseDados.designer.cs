#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PTMotor_v9.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C:\\USERS\\MARCOS CARNEIRO\\DESKTOP\\PTMOTOR_V9\\PTMOTOR_V9\\APP_DATA\\PTMOTOR.MDF")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAluguer(Aluguer instance);
    partial void UpdateAluguer(Aluguer instance);
    partial void DeleteAluguer(Aluguer instance);
    partial void InsertCilindrada(Cilindrada instance);
    partial void UpdateCilindrada(Cilindrada instance);
    partial void DeleteCilindrada(Cilindrada instance);
    partial void InsertDocumentoPessoa(DocumentoPessoa instance);
    partial void UpdateDocumentoPessoa(DocumentoPessoa instance);
    partial void DeleteDocumentoPessoa(DocumentoPessoa instance);
    partial void InsertFichaVeiculo(FichaVeiculo instance);
    partial void UpdateFichaVeiculo(FichaVeiculo instance);
    partial void DeleteFichaVeiculo(FichaVeiculo instance);
    partial void InsertGrupoUtilizador(GrupoUtilizador instance);
    partial void UpdateGrupoUtilizador(GrupoUtilizador instance);
    partial void DeleteGrupoUtilizador(GrupoUtilizador instance);
    partial void InsertGrupoUtilizador_Menu(GrupoUtilizador_Menu instance);
    partial void UpdateGrupoUtilizador_Menu(GrupoUtilizador_Menu instance);
    partial void DeleteGrupoUtilizador_Menu(GrupoUtilizador_Menu instance);
    partial void InsertLinhaAluguer(LinhaAluguer instance);
    partial void UpdateLinhaAluguer(LinhaAluguer instance);
    partial void DeleteLinhaAluguer(LinhaAluguer instance);
    partial void InsertLocalizacao(Localizacao instance);
    partial void UpdateLocalizacao(Localizacao instance);
    partial void DeleteLocalizacao(Localizacao instance);
    partial void InsertMarca(Marca instance);
    partial void UpdateMarca(Marca instance);
    partial void DeleteMarca(Marca instance);
    partial void InsertModelo(Modelo instance);
    partial void UpdateModelo(Modelo instance);
    partial void DeleteModelo(Modelo instance);
    partial void InsertPessoa(Pessoa instance);
    partial void UpdatePessoa(Pessoa instance);
    partial void DeletePessoa(Pessoa instance);
    partial void InsertTipoCombustivel(TipoCombustivel instance);
    partial void UpdateTipoCombustivel(TipoCombustivel instance);
    partial void DeleteTipoCombustivel(TipoCombustivel instance);
    partial void InsertTipoVeiculo(TipoVeiculo instance);
    partial void UpdateTipoVeiculo(TipoVeiculo instance);
    partial void DeleteTipoVeiculo(TipoVeiculo instance);
    partial void InsertVeiculo(Veiculo instance);
    partial void UpdateVeiculo(Veiculo instance);
    partial void DeleteVeiculo(Veiculo instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["C__USERS_MARCOS_CARNEIRO_DESKTOP_PTMOTOR_V9_PTMOTOR_V9_APP_DATA_PTMOTOR_MDFConnec" +
						"tionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Aluguer> Aluguers
		{
			get
			{
				return this.GetTable<Aluguer>();
			}
		}
		
		public System.Data.Linq.Table<Cilindrada> Cilindradas
		{
			get
			{
				return this.GetTable<Cilindrada>();
			}
		}
		
		public System.Data.Linq.Table<DocumentoPessoa> DocumentoPessoas
		{
			get
			{
				return this.GetTable<DocumentoPessoa>();
			}
		}
		
		public System.Data.Linq.Table<FichaVeiculo> FichaVeiculos
		{
			get
			{
				return this.GetTable<FichaVeiculo>();
			}
		}
		
		public System.Data.Linq.Table<GrupoUtilizador> GrupoUtilizadors
		{
			get
			{
				return this.GetTable<GrupoUtilizador>();
			}
		}
		
		public System.Data.Linq.Table<GrupoUtilizador_Menu> GrupoUtilizador_Menus
		{
			get
			{
				return this.GetTable<GrupoUtilizador_Menu>();
			}
		}
		
		public System.Data.Linq.Table<LinhaAluguer> LinhaAluguers
		{
			get
			{
				return this.GetTable<LinhaAluguer>();
			}
		}
		
		public System.Data.Linq.Table<Localizacao> Localizacaos
		{
			get
			{
				return this.GetTable<Localizacao>();
			}
		}
		
		public System.Data.Linq.Table<Marca> Marcas
		{
			get
			{
				return this.GetTable<Marca>();
			}
		}
		
		public System.Data.Linq.Table<Modelo> Modelos
		{
			get
			{
				return this.GetTable<Modelo>();
			}
		}
		
		public System.Data.Linq.Table<Pessoa> Pessoas
		{
			get
			{
				return this.GetTable<Pessoa>();
			}
		}
		
		public System.Data.Linq.Table<TipoCombustivel> TipoCombustivels
		{
			get
			{
				return this.GetTable<TipoCombustivel>();
			}
		}
		
		public System.Data.Linq.Table<TipoVeiculo> TipoVeiculos
		{
			get
			{
				return this.GetTable<TipoVeiculo>();
			}
		}
		
		public System.Data.Linq.Table<Veiculo> Veiculos
		{
			get
			{
				return this.GetTable<Veiculo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aluguer")]
	public partial class Aluguer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Alu_Id;
		
		private System.DateTime _Alu_Data;
		
		private int _Alu_Pes_Id;
		
		private EntitySet<LinhaAluguer> _LinhaAluguers;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlu_IdChanging(int value);
    partial void OnAlu_IdChanged();
    partial void OnAlu_DataChanging(System.DateTime value);
    partial void OnAlu_DataChanged();
    partial void OnAlu_Pes_IdChanging(int value);
    partial void OnAlu_Pes_IdChanged();
    #endregion
		
		public Aluguer()
		{
			this._LinhaAluguers = new EntitySet<LinhaAluguer>(new Action<LinhaAluguer>(this.attach_LinhaAluguers), new Action<LinhaAluguer>(this.detach_LinhaAluguers));
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alu_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Alu_Id
		{
			get
			{
				return this._Alu_Id;
			}
			set
			{
				if ((this._Alu_Id != value))
				{
					this.OnAlu_IdChanging(value);
					this.SendPropertyChanging();
					this._Alu_Id = value;
					this.SendPropertyChanged("Alu_Id");
					this.OnAlu_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alu_Data", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Alu_Data
		{
			get
			{
				return this._Alu_Data;
			}
			set
			{
				if ((this._Alu_Data != value))
				{
					this.OnAlu_DataChanging(value);
					this.SendPropertyChanging();
					this._Alu_Data = value;
					this.SendPropertyChanged("Alu_Data");
					this.OnAlu_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alu_Pes_Id", DbType="Int NOT NULL")]
		public int Alu_Pes_Id
		{
			get
			{
				return this._Alu_Pes_Id;
			}
			set
			{
				if ((this._Alu_Pes_Id != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlu_Pes_IdChanging(value);
					this.SendPropertyChanging();
					this._Alu_Pes_Id = value;
					this.SendPropertyChanged("Alu_Pes_Id");
					this.OnAlu_Pes_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluguer_LinhaAluguer", Storage="_LinhaAluguers", ThisKey="Alu_Id", OtherKey="LinA_Alu_Id")]
		public EntitySet<LinhaAluguer> LinhaAluguers
		{
			get
			{
				return this._LinhaAluguers;
			}
			set
			{
				this._LinhaAluguers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Aluguer", Storage="_Pessoa", ThisKey="Alu_Pes_Id", OtherKey="Pes_Id", IsForeignKey=true)]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Aluguers.Remove(this);
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Aluguers.Add(this);
						this._Alu_Pes_Id = value.Pes_Id;
					}
					else
					{
						this._Alu_Pes_Id = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinhaAluguers(LinhaAluguer entity)
		{
			this.SendPropertyChanging();
			entity.Aluguer = this;
		}
		
		private void detach_LinhaAluguers(LinhaAluguer entity)
		{
			this.SendPropertyChanging();
			entity.Aluguer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cilindrada")]
	public partial class Cilindrada : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cil_Id;
		
		private string _Cil_Descricao;
		
		private EntitySet<Veiculo> _Veiculos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCil_IdChanging(int value);
    partial void OnCil_IdChanged();
    partial void OnCil_DescricaoChanging(string value);
    partial void OnCil_DescricaoChanged();
    #endregion
		
		public Cilindrada()
		{
			this._Veiculos = new EntitySet<Veiculo>(new Action<Veiculo>(this.attach_Veiculos), new Action<Veiculo>(this.detach_Veiculos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cil_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cil_Id
		{
			get
			{
				return this._Cil_Id;
			}
			set
			{
				if ((this._Cil_Id != value))
				{
					this.OnCil_IdChanging(value);
					this.SendPropertyChanging();
					this._Cil_Id = value;
					this.SendPropertyChanged("Cil_Id");
					this.OnCil_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cil_Descricao", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Cil_Descricao
		{
			get
			{
				return this._Cil_Descricao;
			}
			set
			{
				if ((this._Cil_Descricao != value))
				{
					this.OnCil_DescricaoChanging(value);
					this.SendPropertyChanging();
					this._Cil_Descricao = value;
					this.SendPropertyChanged("Cil_Descricao");
					this.OnCil_DescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cilindrada_Veiculo", Storage="_Veiculos", ThisKey="Cil_Id", OtherKey="Vei_Cil_Id")]
		public EntitySet<Veiculo> Veiculos
		{
			get
			{
				return this._Veiculos;
			}
			set
			{
				this._Veiculos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.Cilindrada = this;
		}
		
		private void detach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.Cilindrada = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentoPessoa")]
	public partial class DocumentoPessoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocP_Id;
		
		private string _DocP_Caminho;
		
		private int _DocP_Pes_Id;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocP_IdChanging(int value);
    partial void OnDocP_IdChanged();
    partial void OnDocP_CaminhoChanging(string value);
    partial void OnDocP_CaminhoChanged();
    partial void OnDocP_Pes_IdChanging(int value);
    partial void OnDocP_Pes_IdChanged();
    #endregion
		
		public DocumentoPessoa()
		{
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocP_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocP_Id
		{
			get
			{
				return this._DocP_Id;
			}
			set
			{
				if ((this._DocP_Id != value))
				{
					this.OnDocP_IdChanging(value);
					this.SendPropertyChanging();
					this._DocP_Id = value;
					this.SendPropertyChanged("DocP_Id");
					this.OnDocP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocP_Caminho", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DocP_Caminho
		{
			get
			{
				return this._DocP_Caminho;
			}
			set
			{
				if ((this._DocP_Caminho != value))
				{
					this.OnDocP_CaminhoChanging(value);
					this.SendPropertyChanging();
					this._DocP_Caminho = value;
					this.SendPropertyChanged("DocP_Caminho");
					this.OnDocP_CaminhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocP_Pes_Id", DbType="Int NOT NULL")]
		public int DocP_Pes_Id
		{
			get
			{
				return this._DocP_Pes_Id;
			}
			set
			{
				if ((this._DocP_Pes_Id != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocP_Pes_IdChanging(value);
					this.SendPropertyChanging();
					this._DocP_Pes_Id = value;
					this.SendPropertyChanged("DocP_Pes_Id");
					this.OnDocP_Pes_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_DocumentoPessoa", Storage="_Pessoa", ThisKey="DocP_Pes_Id", OtherKey="Pes_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.DocumentoPessoas.Remove(this);
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.DocumentoPessoas.Add(this);
						this._DocP_Pes_Id = value.Pes_Id;
					}
					else
					{
						this._DocP_Pes_Id = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FichaVeiculo")]
	public partial class FichaVeiculo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FicV_Id;
		
		private System.DateTime _FicV_DataCompra;
		
		private System.Nullable<decimal> _FicV_PrecoCompra;
		
		private int _FicV_Vei_Id;
		
		private int _FicV_Loc_Id;
		
		private EntitySet<LinhaAluguer> _LinhaAluguers;
		
		private EntityRef<Localizacao> _Localizacao;
		
		private EntityRef<Veiculo> _Veiculo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFicV_IdChanging(int value);
    partial void OnFicV_IdChanged();
    partial void OnFicV_DataCompraChanging(System.DateTime value);
    partial void OnFicV_DataCompraChanged();
    partial void OnFicV_PrecoCompraChanging(System.Nullable<decimal> value);
    partial void OnFicV_PrecoCompraChanged();
    partial void OnFicV_Vei_IdChanging(int value);
    partial void OnFicV_Vei_IdChanged();
    partial void OnFicV_Loc_IdChanging(int value);
    partial void OnFicV_Loc_IdChanged();
    #endregion
		
		public FichaVeiculo()
		{
			this._LinhaAluguers = new EntitySet<LinhaAluguer>(new Action<LinhaAluguer>(this.attach_LinhaAluguers), new Action<LinhaAluguer>(this.detach_LinhaAluguers));
			this._Localizacao = default(EntityRef<Localizacao>);
			this._Veiculo = default(EntityRef<Veiculo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FicV_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FicV_Id
		{
			get
			{
				return this._FicV_Id;
			}
			set
			{
				if ((this._FicV_Id != value))
				{
					this.OnFicV_IdChanging(value);
					this.SendPropertyChanging();
					this._FicV_Id = value;
					this.SendPropertyChanged("FicV_Id");
					this.OnFicV_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FicV_DataCompra", DbType="SmallDateTime NOT NULL")]
		public System.DateTime FicV_DataCompra
		{
			get
			{
				return this._FicV_DataCompra;
			}
			set
			{
				if ((this._FicV_DataCompra != value))
				{
					this.OnFicV_DataCompraChanging(value);
					this.SendPropertyChanging();
					this._FicV_DataCompra = value;
					this.SendPropertyChanged("FicV_DataCompra");
					this.OnFicV_DataCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FicV_PrecoCompra", DbType="Money")]
		public System.Nullable<decimal> FicV_PrecoCompra
		{
			get
			{
				return this._FicV_PrecoCompra;
			}
			set
			{
				if ((this._FicV_PrecoCompra != value))
				{
					this.OnFicV_PrecoCompraChanging(value);
					this.SendPropertyChanging();
					this._FicV_PrecoCompra = value;
					this.SendPropertyChanged("FicV_PrecoCompra");
					this.OnFicV_PrecoCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FicV_Vei_Id", DbType="Int NOT NULL")]
		public int FicV_Vei_Id
		{
			get
			{
				return this._FicV_Vei_Id;
			}
			set
			{
				if ((this._FicV_Vei_Id != value))
				{
					if (this._Veiculo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFicV_Vei_IdChanging(value);
					this.SendPropertyChanging();
					this._FicV_Vei_Id = value;
					this.SendPropertyChanged("FicV_Vei_Id");
					this.OnFicV_Vei_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FicV_Loc_Id", DbType="Int NOT NULL")]
		public int FicV_Loc_Id
		{
			get
			{
				return this._FicV_Loc_Id;
			}
			set
			{
				if ((this._FicV_Loc_Id != value))
				{
					if (this._Localizacao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFicV_Loc_IdChanging(value);
					this.SendPropertyChanging();
					this._FicV_Loc_Id = value;
					this.SendPropertyChanged("FicV_Loc_Id");
					this.OnFicV_Loc_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FichaVeiculo_LinhaAluguer", Storage="_LinhaAluguers", ThisKey="FicV_Id", OtherKey="LinA_FicV_Id")]
		public EntitySet<LinhaAluguer> LinhaAluguers
		{
			get
			{
				return this._LinhaAluguers;
			}
			set
			{
				this._LinhaAluguers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localizacao_FichaVeiculo", Storage="_Localizacao", ThisKey="FicV_Loc_Id", OtherKey="Loc_Id", IsForeignKey=true)]
		public Localizacao Localizacao
		{
			get
			{
				return this._Localizacao.Entity;
			}
			set
			{
				Localizacao previousValue = this._Localizacao.Entity;
				if (((previousValue != value) 
							|| (this._Localizacao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Localizacao.Entity = null;
						previousValue.FichaVeiculos.Remove(this);
					}
					this._Localizacao.Entity = value;
					if ((value != null))
					{
						value.FichaVeiculos.Add(this);
						this._FicV_Loc_Id = value.Loc_Id;
					}
					else
					{
						this._FicV_Loc_Id = default(int);
					}
					this.SendPropertyChanged("Localizacao");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Veiculo_FichaVeiculo", Storage="_Veiculo", ThisKey="FicV_Vei_Id", OtherKey="Vei_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Veiculo Veiculo
		{
			get
			{
				return this._Veiculo.Entity;
			}
			set
			{
				Veiculo previousValue = this._Veiculo.Entity;
				if (((previousValue != value) 
							|| (this._Veiculo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Veiculo.Entity = null;
						previousValue.FichaVeiculos.Remove(this);
					}
					this._Veiculo.Entity = value;
					if ((value != null))
					{
						value.FichaVeiculos.Add(this);
						this._FicV_Vei_Id = value.Vei_Id;
					}
					else
					{
						this._FicV_Vei_Id = default(int);
					}
					this.SendPropertyChanged("Veiculo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinhaAluguers(LinhaAluguer entity)
		{
			this.SendPropertyChanging();
			entity.FichaVeiculo = this;
		}
		
		private void detach_LinhaAluguers(LinhaAluguer entity)
		{
			this.SendPropertyChanging();
			entity.FichaVeiculo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GrupoUtilizador")]
	public partial class GrupoUtilizador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Gru_Id;
		
		private string _Gru_Descricao;
		
		private EntitySet<GrupoUtilizador_Menu> _GrupoUtilizador_Menus;
		
		private EntitySet<Pessoa> _Pessoas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGru_IdChanging(int value);
    partial void OnGru_IdChanged();
    partial void OnGru_DescricaoChanging(string value);
    partial void OnGru_DescricaoChanged();
    #endregion
		
		public GrupoUtilizador()
		{
			this._GrupoUtilizador_Menus = new EntitySet<GrupoUtilizador_Menu>(new Action<GrupoUtilizador_Menu>(this.attach_GrupoUtilizador_Menus), new Action<GrupoUtilizador_Menu>(this.detach_GrupoUtilizador_Menus));
			this._Pessoas = new EntitySet<Pessoa>(new Action<Pessoa>(this.attach_Pessoas), new Action<Pessoa>(this.detach_Pessoas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gru_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Gru_Id
		{
			get
			{
				return this._Gru_Id;
			}
			set
			{
				if ((this._Gru_Id != value))
				{
					this.OnGru_IdChanging(value);
					this.SendPropertyChanging();
					this._Gru_Id = value;
					this.SendPropertyChanged("Gru_Id");
					this.OnGru_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gru_Descricao", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Gru_Descricao
		{
			get
			{
				return this._Gru_Descricao;
			}
			set
			{
				if ((this._Gru_Descricao != value))
				{
					this.OnGru_DescricaoChanging(value);
					this.SendPropertyChanging();
					this._Gru_Descricao = value;
					this.SendPropertyChanged("Gru_Descricao");
					this.OnGru_DescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GrupoUtilizador_GrupoUtilizador_Menu", Storage="_GrupoUtilizador_Menus", ThisKey="Gru_Id", OtherKey="GruMen_Gru_Id")]
		public EntitySet<GrupoUtilizador_Menu> GrupoUtilizador_Menus
		{
			get
			{
				return this._GrupoUtilizador_Menus;
			}
			set
			{
				this._GrupoUtilizador_Menus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GrupoUtilizador_Pessoa", Storage="_Pessoas", ThisKey="Gru_Id", OtherKey="Pes_Gru_Id")]
		public EntitySet<Pessoa> Pessoas
		{
			get
			{
				return this._Pessoas;
			}
			set
			{
				this._Pessoas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GrupoUtilizador_Menus(GrupoUtilizador_Menu entity)
		{
			this.SendPropertyChanging();
			entity.GrupoUtilizador = this;
		}
		
		private void detach_GrupoUtilizador_Menus(GrupoUtilizador_Menu entity)
		{
			this.SendPropertyChanging();
			entity.GrupoUtilizador = null;
		}
		
		private void attach_Pessoas(Pessoa entity)
		{
			this.SendPropertyChanging();
			entity.GrupoUtilizador = this;
		}
		
		private void detach_Pessoas(Pessoa entity)
		{
			this.SendPropertyChanging();
			entity.GrupoUtilizador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GrupoUtilizador_Menu")]
	public partial class GrupoUtilizador_Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GruMen_Id;
		
		private int _GruMen_Gru_Id;
		
		private int _GruMen_Men_Id;
		
		private EntityRef<GrupoUtilizador> _GrupoUtilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGruMen_IdChanging(int value);
    partial void OnGruMen_IdChanged();
    partial void OnGruMen_Gru_IdChanging(int value);
    partial void OnGruMen_Gru_IdChanged();
    partial void OnGruMen_Men_IdChanging(int value);
    partial void OnGruMen_Men_IdChanged();
    #endregion
		
		public GrupoUtilizador_Menu()
		{
			this._GrupoUtilizador = default(EntityRef<GrupoUtilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GruMen_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GruMen_Id
		{
			get
			{
				return this._GruMen_Id;
			}
			set
			{
				if ((this._GruMen_Id != value))
				{
					this.OnGruMen_IdChanging(value);
					this.SendPropertyChanging();
					this._GruMen_Id = value;
					this.SendPropertyChanged("GruMen_Id");
					this.OnGruMen_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GruMen_Gru_Id", DbType="Int NOT NULL")]
		public int GruMen_Gru_Id
		{
			get
			{
				return this._GruMen_Gru_Id;
			}
			set
			{
				if ((this._GruMen_Gru_Id != value))
				{
					if (this._GrupoUtilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGruMen_Gru_IdChanging(value);
					this.SendPropertyChanging();
					this._GruMen_Gru_Id = value;
					this.SendPropertyChanged("GruMen_Gru_Id");
					this.OnGruMen_Gru_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GruMen_Men_Id", DbType="Int NOT NULL")]
		public int GruMen_Men_Id
		{
			get
			{
				return this._GruMen_Men_Id;
			}
			set
			{
				if ((this._GruMen_Men_Id != value))
				{
					this.OnGruMen_Men_IdChanging(value);
					this.SendPropertyChanging();
					this._GruMen_Men_Id = value;
					this.SendPropertyChanged("GruMen_Men_Id");
					this.OnGruMen_Men_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GrupoUtilizador_GrupoUtilizador_Menu", Storage="_GrupoUtilizador", ThisKey="GruMen_Gru_Id", OtherKey="Gru_Id", IsForeignKey=true)]
		public GrupoUtilizador GrupoUtilizador
		{
			get
			{
				return this._GrupoUtilizador.Entity;
			}
			set
			{
				GrupoUtilizador previousValue = this._GrupoUtilizador.Entity;
				if (((previousValue != value) 
							|| (this._GrupoUtilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GrupoUtilizador.Entity = null;
						previousValue.GrupoUtilizador_Menus.Remove(this);
					}
					this._GrupoUtilizador.Entity = value;
					if ((value != null))
					{
						value.GrupoUtilizador_Menus.Add(this);
						this._GruMen_Gru_Id = value.Gru_Id;
					}
					else
					{
						this._GruMen_Gru_Id = default(int);
					}
					this.SendPropertyChanged("GrupoUtilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinhaAluguer")]
	public partial class LinhaAluguer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LinA_Id;
		
		private int _LinA_FicV_Id;
		
		private System.DateTime _LinA_DataLevantamento;
		
		private System.DateTime _LinA_DataEntrega;
		
		private int _LinA_Alu_Id;
		
		private EntityRef<FichaVeiculo> _FichaVeiculo;
		
		private EntityRef<Aluguer> _Aluguer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinA_IdChanging(int value);
    partial void OnLinA_IdChanged();
    partial void OnLinA_FicV_IdChanging(int value);
    partial void OnLinA_FicV_IdChanged();
    partial void OnLinA_DataLevantamentoChanging(System.DateTime value);
    partial void OnLinA_DataLevantamentoChanged();
    partial void OnLinA_DataEntregaChanging(System.DateTime value);
    partial void OnLinA_DataEntregaChanged();
    partial void OnLinA_Alu_IdChanging(int value);
    partial void OnLinA_Alu_IdChanged();
    #endregion
		
		public LinhaAluguer()
		{
			this._FichaVeiculo = default(EntityRef<FichaVeiculo>);
			this._Aluguer = default(EntityRef<Aluguer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinA_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LinA_Id
		{
			get
			{
				return this._LinA_Id;
			}
			set
			{
				if ((this._LinA_Id != value))
				{
					this.OnLinA_IdChanging(value);
					this.SendPropertyChanging();
					this._LinA_Id = value;
					this.SendPropertyChanged("LinA_Id");
					this.OnLinA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinA_FicV_Id", DbType="Int NOT NULL")]
		public int LinA_FicV_Id
		{
			get
			{
				return this._LinA_FicV_Id;
			}
			set
			{
				if ((this._LinA_FicV_Id != value))
				{
					if (this._FichaVeiculo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinA_FicV_IdChanging(value);
					this.SendPropertyChanging();
					this._LinA_FicV_Id = value;
					this.SendPropertyChanged("LinA_FicV_Id");
					this.OnLinA_FicV_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinA_DataLevantamento", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LinA_DataLevantamento
		{
			get
			{
				return this._LinA_DataLevantamento;
			}
			set
			{
				if ((this._LinA_DataLevantamento != value))
				{
					this.OnLinA_DataLevantamentoChanging(value);
					this.SendPropertyChanging();
					this._LinA_DataLevantamento = value;
					this.SendPropertyChanged("LinA_DataLevantamento");
					this.OnLinA_DataLevantamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinA_DataEntrega", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LinA_DataEntrega
		{
			get
			{
				return this._LinA_DataEntrega;
			}
			set
			{
				if ((this._LinA_DataEntrega != value))
				{
					this.OnLinA_DataEntregaChanging(value);
					this.SendPropertyChanging();
					this._LinA_DataEntrega = value;
					this.SendPropertyChanged("LinA_DataEntrega");
					this.OnLinA_DataEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinA_Alu_Id", DbType="Int NOT NULL")]
		public int LinA_Alu_Id
		{
			get
			{
				return this._LinA_Alu_Id;
			}
			set
			{
				if ((this._LinA_Alu_Id != value))
				{
					if (this._Aluguer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinA_Alu_IdChanging(value);
					this.SendPropertyChanging();
					this._LinA_Alu_Id = value;
					this.SendPropertyChanged("LinA_Alu_Id");
					this.OnLinA_Alu_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FichaVeiculo_LinhaAluguer", Storage="_FichaVeiculo", ThisKey="LinA_FicV_Id", OtherKey="FicV_Id", IsForeignKey=true)]
		public FichaVeiculo FichaVeiculo
		{
			get
			{
				return this._FichaVeiculo.Entity;
			}
			set
			{
				FichaVeiculo previousValue = this._FichaVeiculo.Entity;
				if (((previousValue != value) 
							|| (this._FichaVeiculo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FichaVeiculo.Entity = null;
						previousValue.LinhaAluguers.Remove(this);
					}
					this._FichaVeiculo.Entity = value;
					if ((value != null))
					{
						value.LinhaAluguers.Add(this);
						this._LinA_FicV_Id = value.FicV_Id;
					}
					else
					{
						this._LinA_FicV_Id = default(int);
					}
					this.SendPropertyChanged("FichaVeiculo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluguer_LinhaAluguer", Storage="_Aluguer", ThisKey="LinA_Alu_Id", OtherKey="Alu_Id", IsForeignKey=true)]
		public Aluguer Aluguer
		{
			get
			{
				return this._Aluguer.Entity;
			}
			set
			{
				Aluguer previousValue = this._Aluguer.Entity;
				if (((previousValue != value) 
							|| (this._Aluguer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aluguer.Entity = null;
						previousValue.LinhaAluguers.Remove(this);
					}
					this._Aluguer.Entity = value;
					if ((value != null))
					{
						value.LinhaAluguers.Add(this);
						this._LinA_Alu_Id = value.Alu_Id;
					}
					else
					{
						this._LinA_Alu_Id = default(int);
					}
					this.SendPropertyChanged("Aluguer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Localizacao")]
	public partial class Localizacao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Loc_Id;
		
		private string _Loc_Descricao;
		
		private string _Loc_Rua;
		
		private string _Loc_CodPostal;
		
		private string _Loc_Localidade;
		
		private string _Loc_Contactos;
		
		private string _Loc_Mail;
		
		private EntitySet<FichaVeiculo> _FichaVeiculos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoc_IdChanging(int value);
    partial void OnLoc_IdChanged();
    partial void OnLoc_DescricaoChanging(string value);
    partial void OnLoc_DescricaoChanged();
    partial void OnLoc_RuaChanging(string value);
    partial void OnLoc_RuaChanged();
    partial void OnLoc_CodPostalChanging(string value);
    partial void OnLoc_CodPostalChanged();
    partial void OnLoc_LocalidadeChanging(string value);
    partial void OnLoc_LocalidadeChanged();
    partial void OnLoc_ContactosChanging(string value);
    partial void OnLoc_ContactosChanged();
    partial void OnLoc_MailChanging(string value);
    partial void OnLoc_MailChanged();
    #endregion
		
		public Localizacao()
		{
			this._FichaVeiculos = new EntitySet<FichaVeiculo>(new Action<FichaVeiculo>(this.attach_FichaVeiculos), new Action<FichaVeiculo>(this.detach_FichaVeiculos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loc_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Loc_Id
		{
			get
			{
				return this._Loc_Id;
			}
			set
			{
				if ((this._Loc_Id != value))
				{
					this.OnLoc_IdChanging(value);
					this.SendPropertyChanging();
					this._Loc_Id = value;
					this.SendPropertyChanged("Loc_Id");
					this.OnLoc_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loc_Descricao", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Loc_Descricao
		{
			get
			{
				return this._Loc_Descricao;
			}
			set
			{
				if ((this._Loc_Descricao != value))
				{
					this.OnLoc_DescricaoChanging(value);
					this.SendPropertyChanging();
					this._Loc_Descricao = value;
					this.SendPropertyChanged("Loc_Descricao");
					this.OnLoc_DescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loc_Rua", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Loc_Rua
		{
			get
			{
				return this._Loc_Rua;
			}
			set
			{
				if ((this._Loc_Rua != value))
				{
					this.OnLoc_RuaChanging(value);
					this.SendPropertyChanging();
					this._Loc_Rua = value;
					this.SendPropertyChanged("Loc_Rua");
					this.OnLoc_RuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loc_CodPostal", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Loc_CodPostal
		{
			get
			{
				return this._Loc_CodPostal;
			}
			set
			{
				if ((this._Loc_CodPostal != value))
				{
					this.OnLoc_CodPostalChanging(value);
					this.SendPropertyChanging();
					this._Loc_CodPostal = value;
					this.SendPropertyChanged("Loc_CodPostal");
					this.OnLoc_CodPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loc_Localidade", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Loc_Localidade
		{
			get
			{
				return this._Loc_Localidade;
			}
			set
			{
				if ((this._Loc_Localidade != value))
				{
					this.OnLoc_LocalidadeChanging(value);
					this.SendPropertyChanging();
					this._Loc_Localidade = value;
					this.SendPropertyChanged("Loc_Localidade");
					this.OnLoc_LocalidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loc_Contactos", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string Loc_Contactos
		{
			get
			{
				return this._Loc_Contactos;
			}
			set
			{
				if ((this._Loc_Contactos != value))
				{
					this.OnLoc_ContactosChanging(value);
					this.SendPropertyChanging();
					this._Loc_Contactos = value;
					this.SendPropertyChanged("Loc_Contactos");
					this.OnLoc_ContactosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loc_Mail", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Loc_Mail
		{
			get
			{
				return this._Loc_Mail;
			}
			set
			{
				if ((this._Loc_Mail != value))
				{
					this.OnLoc_MailChanging(value);
					this.SendPropertyChanging();
					this._Loc_Mail = value;
					this.SendPropertyChanged("Loc_Mail");
					this.OnLoc_MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localizacao_FichaVeiculo", Storage="_FichaVeiculos", ThisKey="Loc_Id", OtherKey="FicV_Loc_Id")]
		public EntitySet<FichaVeiculo> FichaVeiculos
		{
			get
			{
				return this._FichaVeiculos;
			}
			set
			{
				this._FichaVeiculos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FichaVeiculos(FichaVeiculo entity)
		{
			this.SendPropertyChanging();
			entity.Localizacao = this;
		}
		
		private void detach_FichaVeiculos(FichaVeiculo entity)
		{
			this.SendPropertyChanging();
			entity.Localizacao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Marca")]
	public partial class Marca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mar_Id;
		
		private string _Mar_Descricao;
		
		private EntitySet<Modelo> _Modelos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMar_IdChanging(int value);
    partial void OnMar_IdChanged();
    partial void OnMar_DescricaoChanging(string value);
    partial void OnMar_DescricaoChanged();
    #endregion
		
		public Marca()
		{
			this._Modelos = new EntitySet<Modelo>(new Action<Modelo>(this.attach_Modelos), new Action<Modelo>(this.detach_Modelos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mar_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Mar_Id
		{
			get
			{
				return this._Mar_Id;
			}
			set
			{
				if ((this._Mar_Id != value))
				{
					this.OnMar_IdChanging(value);
					this.SendPropertyChanging();
					this._Mar_Id = value;
					this.SendPropertyChanged("Mar_Id");
					this.OnMar_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mar_Descricao", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Mar_Descricao
		{
			get
			{
				return this._Mar_Descricao;
			}
			set
			{
				if ((this._Mar_Descricao != value))
				{
					this.OnMar_DescricaoChanging(value);
					this.SendPropertyChanging();
					this._Mar_Descricao = value;
					this.SendPropertyChanged("Mar_Descricao");
					this.OnMar_DescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Modelo", Storage="_Modelos", ThisKey="Mar_Id", OtherKey="Mod_Mar_Id")]
		public EntitySet<Modelo> Modelos
		{
			get
			{
				return this._Modelos;
			}
			set
			{
				this._Modelos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Modelos(Modelo entity)
		{
			this.SendPropertyChanging();
			entity.Marca = this;
		}
		
		private void detach_Modelos(Modelo entity)
		{
			this.SendPropertyChanging();
			entity.Marca = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Modelo")]
	public partial class Modelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mod_Id;
		
		private string _Mod_Descricao;
		
		private int _Mod_Mar_Id;
		
		private EntitySet<Veiculo> _Veiculos;
		
		private EntityRef<Marca> _Marca;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMod_IdChanging(int value);
    partial void OnMod_IdChanged();
    partial void OnMod_DescricaoChanging(string value);
    partial void OnMod_DescricaoChanged();
    partial void OnMod_Mar_IdChanging(int value);
    partial void OnMod_Mar_IdChanged();
    #endregion
		
		public Modelo()
		{
			this._Veiculos = new EntitySet<Veiculo>(new Action<Veiculo>(this.attach_Veiculos), new Action<Veiculo>(this.detach_Veiculos));
			this._Marca = default(EntityRef<Marca>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mod_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Mod_Id
		{
			get
			{
				return this._Mod_Id;
			}
			set
			{
				if ((this._Mod_Id != value))
				{
					this.OnMod_IdChanging(value);
					this.SendPropertyChanging();
					this._Mod_Id = value;
					this.SendPropertyChanged("Mod_Id");
					this.OnMod_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mod_Descricao", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Mod_Descricao
		{
			get
			{
				return this._Mod_Descricao;
			}
			set
			{
				if ((this._Mod_Descricao != value))
				{
					this.OnMod_DescricaoChanging(value);
					this.SendPropertyChanging();
					this._Mod_Descricao = value;
					this.SendPropertyChanged("Mod_Descricao");
					this.OnMod_DescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mod_Mar_Id", DbType="Int NOT NULL")]
		public int Mod_Mar_Id
		{
			get
			{
				return this._Mod_Mar_Id;
			}
			set
			{
				if ((this._Mod_Mar_Id != value))
				{
					if (this._Marca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMod_Mar_IdChanging(value);
					this.SendPropertyChanging();
					this._Mod_Mar_Id = value;
					this.SendPropertyChanged("Mod_Mar_Id");
					this.OnMod_Mar_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_Veiculo", Storage="_Veiculos", ThisKey="Mod_Id", OtherKey="Vei_Mod_Id")]
		public EntitySet<Veiculo> Veiculos
		{
			get
			{
				return this._Veiculos;
			}
			set
			{
				this._Veiculos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Modelo", Storage="_Marca", ThisKey="Mod_Mar_Id", OtherKey="Mar_Id", IsForeignKey=true)]
		public Marca Marca
		{
			get
			{
				return this._Marca.Entity;
			}
			set
			{
				Marca previousValue = this._Marca.Entity;
				if (((previousValue != value) 
							|| (this._Marca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca.Entity = null;
						previousValue.Modelos.Remove(this);
					}
					this._Marca.Entity = value;
					if ((value != null))
					{
						value.Modelos.Add(this);
						this._Mod_Mar_Id = value.Mar_Id;
					}
					else
					{
						this._Mod_Mar_Id = default(int);
					}
					this.SendPropertyChanged("Marca");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = this;
		}
		
		private void detach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pessoa")]
	public partial class Pessoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pes_Id;
		
		private string _Pes_Login;
		
		private string _Pes_Password;
		
		private string _Pes_Nif;
		
		private string _Pes_CC;
		
		private string _Pes_CartaConducao;
		
		private string _Pes_Nome;
		
		private string _Pes_Rua;
		
		private string _Pes_CodPostal;
		
		private string _Pes_Localidade;
		
		private string _Pes_Contacto;
		
		private string _Pes_Mail;
		
		private int _Pes_Gru_Id;
		
		private EntitySet<Aluguer> _Aluguers;
		
		private EntitySet<DocumentoPessoa> _DocumentoPessoas;
		
		private EntityRef<GrupoUtilizador> _GrupoUtilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPes_IdChanging(int value);
    partial void OnPes_IdChanged();
    partial void OnPes_LoginChanging(string value);
    partial void OnPes_LoginChanged();
    partial void OnPes_PasswordChanging(string value);
    partial void OnPes_PasswordChanged();
    partial void OnPes_NifChanging(string value);
    partial void OnPes_NifChanged();
    partial void OnPes_CCChanging(string value);
    partial void OnPes_CCChanged();
    partial void OnPes_CartaConducaoChanging(string value);
    partial void OnPes_CartaConducaoChanged();
    partial void OnPes_NomeChanging(string value);
    partial void OnPes_NomeChanged();
    partial void OnPes_RuaChanging(string value);
    partial void OnPes_RuaChanged();
    partial void OnPes_CodPostalChanging(string value);
    partial void OnPes_CodPostalChanged();
    partial void OnPes_LocalidadeChanging(string value);
    partial void OnPes_LocalidadeChanged();
    partial void OnPes_ContactoChanging(string value);
    partial void OnPes_ContactoChanged();
    partial void OnPes_MailChanging(string value);
    partial void OnPes_MailChanged();
    partial void OnPes_Gru_IdChanging(int value);
    partial void OnPes_Gru_IdChanged();
    #endregion
		
		public Pessoa()
		{
			this._Aluguers = new EntitySet<Aluguer>(new Action<Aluguer>(this.attach_Aluguers), new Action<Aluguer>(this.detach_Aluguers));
			this._DocumentoPessoas = new EntitySet<DocumentoPessoa>(new Action<DocumentoPessoa>(this.attach_DocumentoPessoas), new Action<DocumentoPessoa>(this.detach_DocumentoPessoas));
			this._GrupoUtilizador = default(EntityRef<GrupoUtilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Pes_Id
		{
			get
			{
				return this._Pes_Id;
			}
			set
			{
				if ((this._Pes_Id != value))
				{
					this.OnPes_IdChanging(value);
					this.SendPropertyChanging();
					this._Pes_Id = value;
					this.SendPropertyChanged("Pes_Id");
					this.OnPes_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_Login", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Pes_Login
		{
			get
			{
				return this._Pes_Login;
			}
			set
			{
				if ((this._Pes_Login != value))
				{
					this.OnPes_LoginChanging(value);
					this.SendPropertyChanging();
					this._Pes_Login = value;
					this.SendPropertyChanged("Pes_Login");
					this.OnPes_LoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_Password", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Pes_Password
		{
			get
			{
				return this._Pes_Password;
			}
			set
			{
				if ((this._Pes_Password != value))
				{
					this.OnPes_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Pes_Password = value;
					this.SendPropertyChanged("Pes_Password");
					this.OnPes_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_Nif", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Pes_Nif
		{
			get
			{
				return this._Pes_Nif;
			}
			set
			{
				if ((this._Pes_Nif != value))
				{
					this.OnPes_NifChanging(value);
					this.SendPropertyChanging();
					this._Pes_Nif = value;
					this.SendPropertyChanged("Pes_Nif");
					this.OnPes_NifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_CC", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Pes_CC
		{
			get
			{
				return this._Pes_CC;
			}
			set
			{
				if ((this._Pes_CC != value))
				{
					this.OnPes_CCChanging(value);
					this.SendPropertyChanging();
					this._Pes_CC = value;
					this.SendPropertyChanged("Pes_CC");
					this.OnPes_CCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_CartaConducao", DbType="NVarChar(10)")]
		public string Pes_CartaConducao
		{
			get
			{
				return this._Pes_CartaConducao;
			}
			set
			{
				if ((this._Pes_CartaConducao != value))
				{
					this.OnPes_CartaConducaoChanging(value);
					this.SendPropertyChanging();
					this._Pes_CartaConducao = value;
					this.SendPropertyChanged("Pes_CartaConducao");
					this.OnPes_CartaConducaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_Nome", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Pes_Nome
		{
			get
			{
				return this._Pes_Nome;
			}
			set
			{
				if ((this._Pes_Nome != value))
				{
					this.OnPes_NomeChanging(value);
					this.SendPropertyChanging();
					this._Pes_Nome = value;
					this.SendPropertyChanged("Pes_Nome");
					this.OnPes_NomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_Rua", DbType="NVarChar(250)")]
		public string Pes_Rua
		{
			get
			{
				return this._Pes_Rua;
			}
			set
			{
				if ((this._Pes_Rua != value))
				{
					this.OnPes_RuaChanging(value);
					this.SendPropertyChanging();
					this._Pes_Rua = value;
					this.SendPropertyChanged("Pes_Rua");
					this.OnPes_RuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_CodPostal", DbType="NVarChar(8)")]
		public string Pes_CodPostal
		{
			get
			{
				return this._Pes_CodPostal;
			}
			set
			{
				if ((this._Pes_CodPostal != value))
				{
					this.OnPes_CodPostalChanging(value);
					this.SendPropertyChanging();
					this._Pes_CodPostal = value;
					this.SendPropertyChanged("Pes_CodPostal");
					this.OnPes_CodPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_Localidade", DbType="NVarChar(250)")]
		public string Pes_Localidade
		{
			get
			{
				return this._Pes_Localidade;
			}
			set
			{
				if ((this._Pes_Localidade != value))
				{
					this.OnPes_LocalidadeChanging(value);
					this.SendPropertyChanging();
					this._Pes_Localidade = value;
					this.SendPropertyChanged("Pes_Localidade");
					this.OnPes_LocalidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_Contacto", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string Pes_Contacto
		{
			get
			{
				return this._Pes_Contacto;
			}
			set
			{
				if ((this._Pes_Contacto != value))
				{
					this.OnPes_ContactoChanging(value);
					this.SendPropertyChanging();
					this._Pes_Contacto = value;
					this.SendPropertyChanged("Pes_Contacto");
					this.OnPes_ContactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_Mail", DbType="NVarChar(250)")]
		public string Pes_Mail
		{
			get
			{
				return this._Pes_Mail;
			}
			set
			{
				if ((this._Pes_Mail != value))
				{
					this.OnPes_MailChanging(value);
					this.SendPropertyChanging();
					this._Pes_Mail = value;
					this.SendPropertyChanged("Pes_Mail");
					this.OnPes_MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pes_Gru_Id", DbType="Int NOT NULL")]
		public int Pes_Gru_Id
		{
			get
			{
				return this._Pes_Gru_Id;
			}
			set
			{
				if ((this._Pes_Gru_Id != value))
				{
					if (this._GrupoUtilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPes_Gru_IdChanging(value);
					this.SendPropertyChanging();
					this._Pes_Gru_Id = value;
					this.SendPropertyChanged("Pes_Gru_Id");
					this.OnPes_Gru_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Aluguer", Storage="_Aluguers", ThisKey="Pes_Id", OtherKey="Alu_Pes_Id")]
		public EntitySet<Aluguer> Aluguers
		{
			get
			{
				return this._Aluguers;
			}
			set
			{
				this._Aluguers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_DocumentoPessoa", Storage="_DocumentoPessoas", ThisKey="Pes_Id", OtherKey="DocP_Pes_Id")]
		public EntitySet<DocumentoPessoa> DocumentoPessoas
		{
			get
			{
				return this._DocumentoPessoas;
			}
			set
			{
				this._DocumentoPessoas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GrupoUtilizador_Pessoa", Storage="_GrupoUtilizador", ThisKey="Pes_Gru_Id", OtherKey="Gru_Id", IsForeignKey=true)]
		public GrupoUtilizador GrupoUtilizador
		{
			get
			{
				return this._GrupoUtilizador.Entity;
			}
			set
			{
				GrupoUtilizador previousValue = this._GrupoUtilizador.Entity;
				if (((previousValue != value) 
							|| (this._GrupoUtilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GrupoUtilizador.Entity = null;
						previousValue.Pessoas.Remove(this);
					}
					this._GrupoUtilizador.Entity = value;
					if ((value != null))
					{
						value.Pessoas.Add(this);
						this._Pes_Gru_Id = value.Gru_Id;
					}
					else
					{
						this._Pes_Gru_Id = default(int);
					}
					this.SendPropertyChanged("GrupoUtilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aluguers(Aluguer entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = this;
		}
		
		private void detach_Aluguers(Aluguer entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = null;
		}
		
		private void attach_DocumentoPessoas(DocumentoPessoa entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = this;
		}
		
		private void detach_DocumentoPessoas(DocumentoPessoa entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoCombustivel")]
	public partial class TipoCombustivel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TipC_Id;
		
		private string _TipC_Descricao;
		
		private EntitySet<Veiculo> _Veiculos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipC_IdChanging(int value);
    partial void OnTipC_IdChanged();
    partial void OnTipC_DescricaoChanging(string value);
    partial void OnTipC_DescricaoChanged();
    #endregion
		
		public TipoCombustivel()
		{
			this._Veiculos = new EntitySet<Veiculo>(new Action<Veiculo>(this.attach_Veiculos), new Action<Veiculo>(this.detach_Veiculos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipC_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TipC_Id
		{
			get
			{
				return this._TipC_Id;
			}
			set
			{
				if ((this._TipC_Id != value))
				{
					this.OnTipC_IdChanging(value);
					this.SendPropertyChanging();
					this._TipC_Id = value;
					this.SendPropertyChanged("TipC_Id");
					this.OnTipC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipC_Descricao", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TipC_Descricao
		{
			get
			{
				return this._TipC_Descricao;
			}
			set
			{
				if ((this._TipC_Descricao != value))
				{
					this.OnTipC_DescricaoChanging(value);
					this.SendPropertyChanging();
					this._TipC_Descricao = value;
					this.SendPropertyChanged("TipC_Descricao");
					this.OnTipC_DescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoCombustivel_Veiculo", Storage="_Veiculos", ThisKey="TipC_Id", OtherKey="Vei_TipC_Id")]
		public EntitySet<Veiculo> Veiculos
		{
			get
			{
				return this._Veiculos;
			}
			set
			{
				this._Veiculos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.TipoCombustivel = this;
		}
		
		private void detach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.TipoCombustivel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoVeiculo")]
	public partial class TipoVeiculo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TipV_Id;
		
		private string _TipV_Descricao;
		
		private EntitySet<Veiculo> _Veiculos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipV_IdChanging(int value);
    partial void OnTipV_IdChanged();
    partial void OnTipV_DescricaoChanging(string value);
    partial void OnTipV_DescricaoChanged();
    #endregion
		
		public TipoVeiculo()
		{
			this._Veiculos = new EntitySet<Veiculo>(new Action<Veiculo>(this.attach_Veiculos), new Action<Veiculo>(this.detach_Veiculos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipV_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TipV_Id
		{
			get
			{
				return this._TipV_Id;
			}
			set
			{
				if ((this._TipV_Id != value))
				{
					this.OnTipV_IdChanging(value);
					this.SendPropertyChanging();
					this._TipV_Id = value;
					this.SendPropertyChanged("TipV_Id");
					this.OnTipV_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipV_Descricao", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TipV_Descricao
		{
			get
			{
				return this._TipV_Descricao;
			}
			set
			{
				if ((this._TipV_Descricao != value))
				{
					this.OnTipV_DescricaoChanging(value);
					this.SendPropertyChanging();
					this._TipV_Descricao = value;
					this.SendPropertyChanged("TipV_Descricao");
					this.OnTipV_DescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoVeiculo_Veiculo", Storage="_Veiculos", ThisKey="TipV_Id", OtherKey="Vei_TipV_Id")]
		public EntitySet<Veiculo> Veiculos
		{
			get
			{
				return this._Veiculos;
			}
			set
			{
				this._Veiculos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.TipoVeiculo = this;
		}
		
		private void detach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.TipoVeiculo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Veiculo")]
	public partial class Veiculo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Vei_Id;
		
		private string _Vei_Matricula;
		
		private string _Vei_Descricao;
		
		private int _Vei_Mod_Id;
		
		private int _Vei_Cil_Id;
		
		private int _Vei_TipC_Id;
		
		private int _Vei_TipV_Id;
		
		private EntitySet<FichaVeiculo> _FichaVeiculos;
		
		private EntityRef<Cilindrada> _Cilindrada;
		
		private EntityRef<Modelo> _Modelo;
		
		private EntityRef<TipoCombustivel> _TipoCombustivel;
		
		private EntityRef<TipoVeiculo> _TipoVeiculo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVei_IdChanging(int value);
    partial void OnVei_IdChanged();
    partial void OnVei_MatriculaChanging(string value);
    partial void OnVei_MatriculaChanged();
    partial void OnVei_DescricaoChanging(string value);
    partial void OnVei_DescricaoChanged();
    partial void OnVei_Mod_IdChanging(int value);
    partial void OnVei_Mod_IdChanged();
    partial void OnVei_Cil_IdChanging(int value);
    partial void OnVei_Cil_IdChanged();
    partial void OnVei_TipC_IdChanging(int value);
    partial void OnVei_TipC_IdChanged();
    partial void OnVei_TipV_IdChanging(int value);
    partial void OnVei_TipV_IdChanged();
    #endregion
		
		public Veiculo()
		{
			this._FichaVeiculos = new EntitySet<FichaVeiculo>(new Action<FichaVeiculo>(this.attach_FichaVeiculos), new Action<FichaVeiculo>(this.detach_FichaVeiculos));
			this._Cilindrada = default(EntityRef<Cilindrada>);
			this._Modelo = default(EntityRef<Modelo>);
			this._TipoCombustivel = default(EntityRef<TipoCombustivel>);
			this._TipoVeiculo = default(EntityRef<TipoVeiculo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vei_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Vei_Id
		{
			get
			{
				return this._Vei_Id;
			}
			set
			{
				if ((this._Vei_Id != value))
				{
					this.OnVei_IdChanging(value);
					this.SendPropertyChanging();
					this._Vei_Id = value;
					this.SendPropertyChanged("Vei_Id");
					this.OnVei_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vei_Matricula", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Vei_Matricula
		{
			get
			{
				return this._Vei_Matricula;
			}
			set
			{
				if ((this._Vei_Matricula != value))
				{
					this.OnVei_MatriculaChanging(value);
					this.SendPropertyChanging();
					this._Vei_Matricula = value;
					this.SendPropertyChanged("Vei_Matricula");
					this.OnVei_MatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vei_Descricao", DbType="NVarChar(250)")]
		public string Vei_Descricao
		{
			get
			{
				return this._Vei_Descricao;
			}
			set
			{
				if ((this._Vei_Descricao != value))
				{
					this.OnVei_DescricaoChanging(value);
					this.SendPropertyChanging();
					this._Vei_Descricao = value;
					this.SendPropertyChanged("Vei_Descricao");
					this.OnVei_DescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vei_Mod_Id", DbType="Int NOT NULL")]
		public int Vei_Mod_Id
		{
			get
			{
				return this._Vei_Mod_Id;
			}
			set
			{
				if ((this._Vei_Mod_Id != value))
				{
					if (this._Modelo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVei_Mod_IdChanging(value);
					this.SendPropertyChanging();
					this._Vei_Mod_Id = value;
					this.SendPropertyChanged("Vei_Mod_Id");
					this.OnVei_Mod_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vei_Cil_Id", DbType="Int NOT NULL")]
		public int Vei_Cil_Id
		{
			get
			{
				return this._Vei_Cil_Id;
			}
			set
			{
				if ((this._Vei_Cil_Id != value))
				{
					if (this._Cilindrada.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVei_Cil_IdChanging(value);
					this.SendPropertyChanging();
					this._Vei_Cil_Id = value;
					this.SendPropertyChanged("Vei_Cil_Id");
					this.OnVei_Cil_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vei_TipC_Id", DbType="Int NOT NULL")]
		public int Vei_TipC_Id
		{
			get
			{
				return this._Vei_TipC_Id;
			}
			set
			{
				if ((this._Vei_TipC_Id != value))
				{
					if (this._TipoCombustivel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVei_TipC_IdChanging(value);
					this.SendPropertyChanging();
					this._Vei_TipC_Id = value;
					this.SendPropertyChanged("Vei_TipC_Id");
					this.OnVei_TipC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vei_TipV_Id", DbType="Int NOT NULL")]
		public int Vei_TipV_Id
		{
			get
			{
				return this._Vei_TipV_Id;
			}
			set
			{
				if ((this._Vei_TipV_Id != value))
				{
					if (this._TipoVeiculo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVei_TipV_IdChanging(value);
					this.SendPropertyChanging();
					this._Vei_TipV_Id = value;
					this.SendPropertyChanged("Vei_TipV_Id");
					this.OnVei_TipV_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Veiculo_FichaVeiculo", Storage="_FichaVeiculos", ThisKey="Vei_Id", OtherKey="FicV_Vei_Id")]
		public EntitySet<FichaVeiculo> FichaVeiculos
		{
			get
			{
				return this._FichaVeiculos;
			}
			set
			{
				this._FichaVeiculos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cilindrada_Veiculo", Storage="_Cilindrada", ThisKey="Vei_Cil_Id", OtherKey="Cil_Id", IsForeignKey=true)]
		public Cilindrada Cilindrada
		{
			get
			{
				return this._Cilindrada.Entity;
			}
			set
			{
				Cilindrada previousValue = this._Cilindrada.Entity;
				if (((previousValue != value) 
							|| (this._Cilindrada.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cilindrada.Entity = null;
						previousValue.Veiculos.Remove(this);
					}
					this._Cilindrada.Entity = value;
					if ((value != null))
					{
						value.Veiculos.Add(this);
						this._Vei_Cil_Id = value.Cil_Id;
					}
					else
					{
						this._Vei_Cil_Id = default(int);
					}
					this.SendPropertyChanged("Cilindrada");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_Veiculo", Storage="_Modelo", ThisKey="Vei_Mod_Id", OtherKey="Mod_Id", IsForeignKey=true)]
		public Modelo Modelo
		{
			get
			{
				return this._Modelo.Entity;
			}
			set
			{
				Modelo previousValue = this._Modelo.Entity;
				if (((previousValue != value) 
							|| (this._Modelo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Modelo.Entity = null;
						previousValue.Veiculos.Remove(this);
					}
					this._Modelo.Entity = value;
					if ((value != null))
					{
						value.Veiculos.Add(this);
						this._Vei_Mod_Id = value.Mod_Id;
					}
					else
					{
						this._Vei_Mod_Id = default(int);
					}
					this.SendPropertyChanged("Modelo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoCombustivel_Veiculo", Storage="_TipoCombustivel", ThisKey="Vei_TipC_Id", OtherKey="TipC_Id", IsForeignKey=true)]
		public TipoCombustivel TipoCombustivel
		{
			get
			{
				return this._TipoCombustivel.Entity;
			}
			set
			{
				TipoCombustivel previousValue = this._TipoCombustivel.Entity;
				if (((previousValue != value) 
							|| (this._TipoCombustivel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoCombustivel.Entity = null;
						previousValue.Veiculos.Remove(this);
					}
					this._TipoCombustivel.Entity = value;
					if ((value != null))
					{
						value.Veiculos.Add(this);
						this._Vei_TipC_Id = value.TipC_Id;
					}
					else
					{
						this._Vei_TipC_Id = default(int);
					}
					this.SendPropertyChanged("TipoCombustivel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoVeiculo_Veiculo", Storage="_TipoVeiculo", ThisKey="Vei_TipV_Id", OtherKey="TipV_Id", IsForeignKey=true)]
		public TipoVeiculo TipoVeiculo
		{
			get
			{
				return this._TipoVeiculo.Entity;
			}
			set
			{
				TipoVeiculo previousValue = this._TipoVeiculo.Entity;
				if (((previousValue != value) 
							|| (this._TipoVeiculo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoVeiculo.Entity = null;
						previousValue.Veiculos.Remove(this);
					}
					this._TipoVeiculo.Entity = value;
					if ((value != null))
					{
						value.Veiculos.Add(this);
						this._Vei_TipV_Id = value.TipV_Id;
					}
					else
					{
						this._Vei_TipV_Id = default(int);
					}
					this.SendPropertyChanged("TipoVeiculo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FichaVeiculos(FichaVeiculo entity)
		{
			this.SendPropertyChanging();
			entity.Veiculo = this;
		}
		
		private void detach_FichaVeiculos(FichaVeiculo entity)
		{
			this.SendPropertyChanging();
			entity.Veiculo = null;
		}
	}
}
#pragma warning restore 1591
